pattern = "[A|P|S][F|G|H]\\d{1,3}" # RegExp for legit unknown plant codes
species.nomatch <- data.frame()
species.tally <- data.frame()
for (i in 1:nrow(tblSpecRichDetail)) {
sl <- tblSpecRichDetail[i,"SpeciesList"]
if (!is.na(sl)){
spp.list <- unlist(strsplit(tblSpecRichDetail[i,"SpeciesList"],";"))
#spp.list <- spp.list[-grep(pattern,spp.list)]  # remove legit unknown plant codes
not.in <- !(spp.list %in% plants.master$Accepted.Symbol)
if (sum(not.in)>0) {
species.nomatch <- rbind(species.nomatch,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"Code"=spp.list[not.in]))
species.tally <- rbind(species.tally,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"TotalSpp"=length(not.in),"NoMatch"=sum(not.in)))
}
}
}
# Add the plot, and Site numbers/names into
tmp2 <- species.nomatch %>% inner_join(tblSpecRichHeader[,c(2,3)],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
spp.nomatch.sum <- species.nomatch %>% group_by(Code) %>% summarise(n=n()) %>% arrange(desc(n))
knitr::kable(spp.nomatch.sum)
num.nomatch.proj <- tmp2 %>% group_by(Code,ProjectBase) %>% summarise(n=n())
# calc pct species not in plants list
species.tally$PctNoMatch <- species.tally$NoMatch/species.tally$TotalSpp
summary(species.tally$pctNoMatch)
# find codes that end in 'pf' or 'af'
spp.nomatch.sum <- species.nomatch %>% group_by(Code) %>% summarise(n=n()) %>% arrange(desc(n))
knitr::kable(spp.nomatch.sum)
num.nomatch.proj <- tmp2 %>% group_by(Code,ProjectBase) %>% summarise(n=n())
# calc pct species not in plants list
species.tally$PctNoMatch <- species.tally$NoMatch/species.tally$TotalSpp
summary(species.tally)
# find codes that end in 'pf' or 'af'
species.tally[,species.tally$PctNoMatch>0.5]
species.tally[species.tally$PctNoMatch>0.5,]
pattern = "[A|P|S][F|G|H]\\d{1,3}" # RegExp for legit unknown plant codes
species.nomatch <- data.frame()
species.tally <- data.frame()
for (i in 1:nrow(tblSpecRichDetail)) {
sl <- tblSpecRichDetail[i,"SpeciesList"]
if (!is.na(sl)){
spp.list <- unlist(strsplit(tblSpecRichDetail[i,"SpeciesList"],";"))
spp.list <- spp.list[-grep(pattern,spp.list)]  # remove legit unknown plant codes
not.in <- !(spp.list %in% plants.master$Accepted.Symbol)
if (sum(not.in)>0) {
species.nomatch <- rbind(species.nomatch,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"Code"=spp.list[not.in]))
species.tally <- rbind(species.tally,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"TotalSpp"=length(not.in),"NoMatch"=sum(not.in)))
}
}
}
# Add the plot, and Site numbers/names into
tmp2 <- species.nomatch %>% inner_join(tblSpecRichHeader[,c(2,3)],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
spp.nomatch.sum <- species.nomatch %>% group_by(Code) %>% summarise(n=n()) %>% arrange(desc(n))
knitr::kable(spp.nomatch.sum)
num.nomatch.proj <- tmp2 %>% group_by(Code,ProjectBase) %>% summarise(n=n())
# calc pct species not in plants list
species.tally$PctNoMatch <- species.tally$NoMatch/species.tally$TotalSpp
summary(species.tally)
# find codes that end in 'pf' or 'af'
View(tblSpecRichDetail)
View(tblLPIHeader)
library(lubridate)
tblSpecRichHeader$year <- year(as.Date(tblSpecRichHeader$FormDate))
View(tblSpecRichHeader)
species.tally$PctNoMatch
mean(species.tally$PctNoMatch)
library(dplyr)
library(ggplot2)
library(arcgisbinding)
library(markdown)
library(knitr)
library(sqldf)
library(lubridate)
work.dir <- "C:\\Users\\jasokarl\\Google Drive\\Landscape Toolbox\\LandscapeToolbox_GitHub\\LandscapeToolbox\\DIMAqc\\DIMAqc"
terradat <- "C:\\Users\\jasokarl\\Google Drive\\BLM_AIM\\geodata\\TerrADatExport_19Jan2016.gdb"
plants.file <- "PLANTSlist_Master_with_attribs.20161116.csv"
setwd(work.dir)
plants.master <- read.csv(plants.file,header=T)
arc<-arc.check_product()
# load terrestrial AIM featureclass
# load tables with species info and those that are necessary to track back to the plot and project
#    i.e., species richness detail/header, LPI detail/header, line, plot, sites tables
tblPlots<-paste(terradat,"tblPlots",sep="/") %>% arc.open %>% arc.select()
tblLines <- paste(terradat,"tblLines",sep="/") %>% arc.open %>% arc.select()
tblSites <- paste(terradat,"tblSites",sep="/") %>% arc.open %>% arc.select()
tblLPIHeader <- paste(terradat,"tblLPIHeader",sep="/") %>% arc.open %>% arc.select()
tblLPIDetail <- paste(terradat,"tblLPIDetail",sep="/") %>% arc.open %>% arc.select()
tblSpecRichHeader <- paste(terradat,"tblSpecRichHeader",sep="/") %>% arc.open %>% arc.select()
setwd(work.dir)
plants.master <- read.csv(plants.file,header=T)
arc<-arc.check_product()
# load terrestrial AIM featureclass
# load tables with species info and those that are necessary to track back to the plot and project
#    i.e., species richness detail/header, LPI detail/header, line, plot, sites tables
tblPlots<-paste(terradat,"tblPlots",sep="/") %>% arc.open %>% arc.select()
tblLines <- paste(terradat,"tblLines",sep="/") %>% arc.open %>% arc.select()
tblSites <- paste(terradat,"tblSites",sep="/") %>% arc.open %>% arc.select()
# Deal with these later if we need to.
#tblLPIHeader <- paste(terradat,"tblLPIHeader",sep="/") %>% arc.open %>% arc.select()
#tblLPIDetail <- paste(terradat,"tblLPIDetail",sep="/") %>% arc.open %>% arc.select()
tblSpecRichHeader <- paste(terradat,"tblSpecRichHeader",sep="/") %>% arc.open %>% arc.select()
tblSpecRichDetail <- paste(terradat,"tblSpecRichDetail",sep="/") %>% arc.open %>% arc.select()
tblSites$ProjectBase <- substr(tblSites$SiteName,1,nchar(tblSites$SiteName)-5)
tblSites.sum <- tblSites %>% group_by(SiteKey) %>% summarise(ProjectBase=first(ProjectBase),n=n())
tblPlots.sum <- tblPlots %>% group_by(PlotKey) %>% summarise(SiteKey=first(SiteKey),PlotID=first(PlotID),n=n())
tblLines.sum <- tblLines %>% group_by(LineKey) %>% summarise(PlotKey=first(PlotKey),n=n())
tblPlotLines <- tblPlots.sum %>% inner_join(tblSites.sum,by="SiteKey") %>% inner_join(tblLines.sum,by="PlotKey")
tblSpecRichHeader$year <- year(as.Date(tblSpecRichHeader$FormDate))
setwd(work.dir)
plants.master <- read.csv(plants.file,header=T)
arc<-arc.check_product()
# load terrestrial AIM featureclass
# load tables with species info and those that are necessary to track back to the plot and project
#    i.e., species richness detail/header, LPI detail/header, line, plot, sites tables
tblPlots<-paste(terradat,"tblPlots",sep="/") %>% arc.open %>% arc.select(stringsAsFactors=FALSE)
?arc.select
setwd(work.dir)
plants.master <- read.csv(plants.file,header=T)
arc<-arc.check_product()
# load terrestrial AIM featureclass
# load tables with species info and those that are necessary to track back to the plot and project
#    i.e., species richness detail/header, LPI detail/header, line, plot, sites tables
tblPlots<-paste(terradat,"tblPlots",sep="/") %>% arc.open %>% arc.select()
tblLines <- paste(terradat,"tblLines",sep="/") %>% arc.open %>% arc.select()
tblSites <- paste(terradat,"tblSites",sep="/") %>% arc.open %>% arc.select()
# Deal with these later if we need to.
#tblLPIHeader <- paste(terradat,"tblLPIHeader",sep="/") %>% arc.open %>% arc.select()
#tblLPIDetail <- paste(terradat,"tblLPIDetail",sep="/") %>% arc.open %>% arc.select()
tblSpecRichHeader <- paste(terradat,"tblSpecRichHeader",sep="/") %>% arc.open %>% arc.select()
tblSpecRichDetail <- paste(terradat,"tblSpecRichDetail",sep="/") %>% arc.open %>% arc.select()
tblSites$ProjectBase <- substr(tblSites$SiteName,1,nchar(tblSites$SiteName)-5)
tblSites.sum <- tblSites %>% group_by(SiteKey) %>% summarise(ProjectBase=first(ProjectBase),n=n())
tblPlots.sum <- tblPlots %>% group_by(PlotKey) %>% summarise(SiteKey=first(SiteKey),PlotID=first(PlotID),n=n())
tblLines.sum <- tblLines %>% group_by(LineKey) %>% summarise(PlotKey=first(PlotKey),n=n())
tblPlotLines <- tblPlots.sum %>% inner_join(tblSites.sum,by="SiteKey") %>% inner_join(tblLines.sum,by="PlotKey")
tblSpecRichHeader$year <- year(as.Date(tblSpecRichHeader$FormDate))
knitr::root.dir(work.dir)
knitr::kable(num.nomatch.proj %>% group_by(ProjectBase)  %>% summarise(n=n()) %>% arrange(desc(n)))
num.nomatch.proj <- species.nomatch.plots %>% group_by(Code,ProjectBase) %>% summarise(n=n())
pattern = "[AF|AG|PF|PG|SH|TR]\\d{1,3}" # RegExp for legit unknown plant codes
species.nomatch <- data.frame()
species.tally <- data.frame()
for (i in 1:nrow(tblSpecRichDetail)) {
sl <- tblSpecRichDetail[i,"SpeciesList"]
if (!is.na(sl)){
spp.list <- unlist(strsplit(tblSpecRichDetail[i,"SpeciesList"],";"))
spp.total <- length(spp.list)
spp.list <- spp.list[-grep(pattern,spp.list)]  # remove legit unknown plant codes
spp.unkn <- spp.total-length(spp.list)
not.in <- !(spp.list %in% plants.master$Accepted.Symbol)
if (sum(not.in)>0) {
species.nomatch <- rbind(species.nomatch,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"Code"=spp.list[not.in]))
species.tally <- rbind(species.tally,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"TotalSpp"=spp.total,"UnknSpp"=spp.unkn,"NoMatch"=sum(not.in)))
}
}
}
# Add the plot, and Site numbers/names into
species.nomatch.plots <- species.nomatch %>% inner_join(tblSpecRichHeader[,c("RecKey","LineLey","year")],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
species.nomatch.plots <- species.nomatch %>% inner_join(tblSpecRichHeader[,c("RecKey","LineLey","year")],by="RecKey")
tblSpecRichHeader$year <- year(as.Date(tblSpecRichHeader$FormDate))
species.nomatch.plots <- species.nomatch %>% inner_join(tblSpecRichHeader[,c("RecKey","LineLey","year")],by="RecKey")
species.nomatch.plots <- species.nomatch %>% inner_join(tblSpecRichHeader[,c("RecKey","LineKey","year")],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
num.nomatch.proj <- species.nomatch.plots %>% group_by(Code,ProjectBase) %>% summarise(n=n())
knitr::kable(num.nomatch.proj %>% group_by(ProjectBase)  %>% summarise(n=n()) %>% arrange(desc(n)))
pattern = "[AF|AG|PF|PG|SH|TR]\\d{1,3}" # RegExp for legit unknown plant codes
species.nomatch <- data.frame()
species.tally <- data.frame()
for (i in 1:nrow(tblSpecRichDetail)) {
sl <- tblSpecRichDetail[i,"SpeciesList"]
if (!is.na(sl)){
spp.list <- unlist(strsplit(tblSpecRichDetail[i,"SpeciesList"],";"))
spp.total <- length(spp.list)
spp.list <- spp.list[-grep(pattern,spp.list)]  # remove legit unknown plant codes
spp.unkn <- spp.total-length(spp.list)
not.in <- !(spp.list %in% plants.master$Accepted.Symbol)
if (sum(not.in)>0) {
species.nomatch <- rbind(species.nomatch,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"Code"=spp.list[not.in]))
species.tally <- rbind(species.tally,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"TotalSpp"=spp.total,"UnknSpp"=spp.unkn,"NoMatch"=sum(not.in)))
}
}
}
# Add the plot, and Site numbers/names into
species.nomatch.plots <- species.nomatch %>% inner_join(tblSpecRichHeader[,c("RecKey","LineKey","year")],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
num.nomatch.proj <- species.nomatch.plots %>% group_by(Code,ProjectBase) %>% summarise(n=n())
num.nomatch.proj <- species.nomatch.plots %>% group_by(Code,ProjectBase) %>% summarise(n=n())
species.nomatch.plots <- species.nomatch %>% inner_join(tblSpecRichHeader[,c("RecKey","LineKey","year")],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
num.nomatch.proj <- species.nomatch.plots %>% group_by(Code,ProjectBase) %>% summarise(n=n())
rm(list=ls())
library(dplyr)
library(ggplot2)
library(arcgisbinding)
library(markdown)
library(knitr)
library(sqldf)
library(lubridate)
work.dir <- "C:\\Users\\jasokarl\\Google Drive\\Landscape Toolbox\\LandscapeToolbox_GitHub\\LandscapeToolbox\\DIMAqc\\DIMAqc"
terradat <- "C:\\Users\\jasokarl\\Google Drive\\BLM_AIM\\geodata\\TerrADatExport_19Jan2016.gdb"
plants.file <- "PLANTSlist_Master_with_attribs.20161116.csv"
setwd(work.dir)
plants.master <- read.csv(plants.file,header=T)
arc<-arc.check_product()
# load terrestrial AIM featureclass
# load tables with species info and those that are necessary to track back to the plot and project
#    i.e., species richness detail/header, LPI detail/header, line, plot, sites tables
tblPlots<-paste(terradat,"tblPlots",sep="/") %>% arc.open %>% arc.select()
tblLines <- paste(terradat,"tblLines",sep="/") %>% arc.open %>% arc.select()
tblSites <- paste(terradat,"tblSites",sep="/") %>% arc.open %>% arc.select()
# Deal with these later if we need to.
#tblLPIHeader <- paste(terradat,"tblLPIHeader",sep="/") %>% arc.open %>% arc.select()
#tblLPIDetail <- paste(terradat,"tblLPIDetail",sep="/") %>% arc.open %>% arc.select()
tblSpecRichHeader <- paste(terradat,"tblSpecRichHeader",sep="/") %>% arc.open %>% arc.select()
tblSpecRichDetail <- paste(terradat,"tblSpecRichDetail",sep="/") %>% arc.open %>% arc.select()
tblSites$ProjectBase <- substr(tblSites$SiteName,1,nchar(tblSites$SiteName)-5)
tblSites.sum <- tblSites %>% group_by(SiteKey) %>% summarise(ProjectBase=first(ProjectBase),n=n())
tblPlots.sum <- tblPlots %>% group_by(PlotKey) %>% summarise(SiteKey=first(SiteKey),PlotID=first(PlotID),n=n())
tblLines.sum <- tblLines %>% group_by(LineKey) %>% summarise(PlotKey=first(PlotKey),n=n())
tblPlotLines <- tblPlots.sum %>% inner_join(tblSites.sum,by="SiteKey") %>% inner_join(tblLines.sum,by="PlotKey")
tblSpecRichHeader$year <- year(as.Date(tblSpecRichHeader$FormDate))
pattern = "[AF|AG|PF|PG|SH|TR]\\d{1,3}" # RegExp for legit unknown plant codes
species.nomatch <- data.frame()
species.tally <- data.frame()
for (i in 1:nrow(tblSpecRichDetail)) {
sl <- tblSpecRichDetail[i,"SpeciesList"]
if (!is.na(sl)){
spp.list <- unlist(strsplit(tblSpecRichDetail[i,"SpeciesList"],";"))
spp.total <- length(spp.list)
spp.list <- spp.list[-grep(pattern,spp.list)]  # remove legit unknown plant codes
spp.unkn <- spp.total-length(spp.list)
not.in <- !(spp.list %in% plants.master$Accepted.Symbol)
if (sum(not.in)>0) {
species.nomatch <- rbind(species.nomatch,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"Code"=spp.list[not.in]))
species.tally <- rbind(species.tally,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"TotalSpp"=spp.total,"UnknSpp"=spp.unkn,"NoMatch"=sum(not.in)))
}
}
}
# Add the plot, and Site numbers/names into
species.nomatch.plots <- species.nomatch %>% inner_join(tblSpecRichHeader[,c("RecKey","LineKey","year")],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
num.nomatch.proj <- species.nomatch.plots %>% group_by(Code,ProjectBase) %>% summarise(n=n())
# calc pct species not in plants list
species.tally$PctNoMatch <- species.tally$NoMatch/species.tally$TotalSpp
mean(species.tally$PctNoMatch)
knitr::kable(num.nomatch.proj %>% group_by(ProjectBase)  %>% summarise(n=n()) %>% arrange(desc(n)))
# calc pct species not in plants list
species.tally$PctNoMatch <- species.tally$NoMatch/species.tally$TotalSpp
species.tally$PctUnkn <- species.tally$UnknSpp.species.tally$TotalSpp
mean(species.tally$PctNoMatch)
# calc pct species not in plants list
species.tally$PctNoMatch <- species.tally$NoMatch/species.tally$TotalSpp
species.tally$PctUnkn <- species.tally$UnknSpp.species.tally$TotalSpp
pctNoMatch <- mean(species.tally$PctNoMatch)
pctUnkn <- mean(species.tally$PctNoMatch)
pctUnkn <- mean(species.tally$PctUnkn)
# calc pct species not in plants list
species.tally$PctNoMatch <- species.tally$NoMatch/species.tally$TotalSpp
species.tally$PctUnkn <- species.tally$UnknSpp.species.tally$TotalSpp
pctNoMatch <- mean(species.tally$PctNoMatch)
pctUnkn <- mean(species.tally$PctUnkn)
species.tally$PctUnkn <- species.tally$UnknSpp.species.tally$TotalSpp
pctUnkn <- mean(species.tally$PctUnkn)
View(species.tally)
species.tally$PctUnkn <- species.tally$UnknSpp/species.tally$TotalSpp
pctUnkn <- mean(species.tally$PctUnkn)
# calc pct species not in plants list
species.tally$PctNoMatch <- species.tally$NoMatch/species.tally$TotalSpp
species.tally$PctUnkn <- species.tally$UnknSpp/species.tally$TotalSpp
avgNoMatch <- mean(species.tally$PctNoMatch)
minNoMatch <- min(species.tally$PctNoMatch)
maxNoMatch <- max(species.tally$PctNoMatch)
avgUnkn <- mean(species.tally$PctUnkn)
minUnkn <- min(species.tally$PctUnkn)
maxUnkn <-max(species.tally$PctUnkn)
# calc pct species not in plants list
species.tally$PctNoMatch <- species.tally$NoMatch/species.tally$TotalSpp
species.tally$PctUnkn <- species.tally$UnknSpp/species.tally$TotalSpp
avgNoMatch <- mean(species.tally$PctNoMatch)*100
minNoMatch <- min(species.tally$PctNoMatch)*100
maxNoMatch <- max(species.tally$PctNoMatch)*100
avgUnkn <- mean(species.tally$PctUnkn)*100
minUnkn <- min(species.tally$PctUnkn)*100
maxUnkn <-max(species.tally$PctUnkn)*100
ggplot(data=species.tally, aes(x=pctUnkn))+geom_histogram()
ggplot(data=species.tally, aes(x=pctUnkn))+geom_histogram()+stat_bin(bins=10)
summary(species.tally)
ggplot(data=species.tally, aes(x=pctUnkn))+geom_histogram()+stat_bin(binwidth=0.1)
ggplot(data=species.tally, aes(x=pctUnkn))+geom_histogram(binwidth=0.1)
hist(species.tally$pckUnkn, breaks=10)
hist(species.tally$PctUnkn, breaks=10)
ggplot(data=species.tally, aes(x=PctUnkn))+geom_histogram(binwidth=0.1)
ggplot(data=species.tally, aes(x=PctUnkn))+geom_histogram()
ggplot(data=species.tally, aes(x=PctUnkn))+geom_histogram() +
ylab("Number of plots") + xlab("Percent of species recorded on a plot")
?melt
library(reshape2)
?melt
plot.data <- species.tally[,c("RecKey","PctUnkn","PctNoMatch")] %>% melt(RecKey)
names(species.tally)
names(species.tally[,c("RecKey","PctUnkn","PctNoMatch")])
plot.data <- species.tally[,c("RecKey","PctUnkn","PctNoMatch")] %>% melt("RecKey")
View(plot.data)
ggplot(data=plot.data, aes(x=value*100))+geom_histogram() + facet_wrap(facets=variable)
View(plot.data)
ggplot(data=plot.data, aes(x=value*100))+geom_histogram() + facet_wrap(facets="variable")
ggplot(data=plot.data, aes(x=value*100))+geom_histogram() + facet_wrap(facets="variable")
ylab("Number of plots") + xlab("Percent of species recorded on a plot")
ggplot(data=plot.data, aes(x=value*100))+geom_histogram() + facet_wrap(facets="variable")
sl
plot.data <- species.tally[,c("RecKey","PctUnkn","PctNoMatch")] %>% melt("RecKey")
ggplot(data=plot.data, aes(x=value*100))+geom_histogram() + facet_wrap(facets="variable", labeller=as_labeller(c('PctUnkn'="Unknown Species Code","PctNoMatch"="Code not in PLANTS"))) +
ylab("Number of plots") + xlab("Percent of species recorded on a plot")
plot.data <- species.tally[,c("RecKey","PctUnkn","PctNoMatch")] %>% melt("RecKey")
ggplot(data=plot.data, aes(x=value*100))+geom_histogram() + facet_wrap(facets="variable", labeller=as_labeller(c('PctUnkn'="Unknown Species Code","PctNoMatch"="Code not in PLANTS"))) +
ylab("Number of plots") + xlab("Percent of species recorded on a plot") + ggtitle("Prevalence of unknown species codes in TerrADat by Plot")
plot.data <- species.tally[,c("RecKey","PctUnkn","PctNoMatch")] %>% melt("RecKey")
ggplot(data=plot.data, aes(x=value*100))+geom_histogram() + facet_wrap(facets="variable", labeller=as_labeller(c('PctUnkn'="Approved Unknown Species Code","PctNoMatch"="Code not in PLANTS"))) +
ylab("Number of plots") + xlab("Percent of species recorded on a plot") + ggtitle("Prevalence of unknown species codes in TerrADat by Plot")
names(species.tally)
species.tally[species.tally$PctUnkn > 0.25,]
species.tally[species.tally$PctUnkn > 0.4,]
plots.gt40unkn <- species.tally[species.tally$PctUnkn>=0.4,] %>% inner_join(tblSpecRichHeader[,c("RecKey","LineKey","year")],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
plots.gt40nomatch <- species.tally[species.tally$PctNoMatch>0.4,] %>% inner_join(tblSpecRichHeader[,c("RecKey","LineKey","year")],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
nrow(plots.gt40nomatch)
nrow(plots.gt40unkn)
species.tally[species.tally$PctNoMatch>0.4,]
View(plots.gt40unkn)
names(plots.gt40unkn)
knitr::kable(plots.gt40unkn[,c("ProjectBase","year","PlotID","TotalSpp","PctUnkn","PctNoMatch")])
knitr::kable(plots.gt40nomatch[,c("ProjectBase","year","PlotID","TotalSpp","PctUnkn","PctNoMatch")])
?kable
View(species.nomatch)
rm(list=ls())
library(dplyr)
library(ggplot2)
library(arcgisbinding)
library(markdown)
library(knitr)
library(sqldf)
library(lubridate)
work.dir <- "C:\\Users\\jasokarl\\Google Drive\\Landscape Toolbox\\LandscapeToolbox_GitHub\\LandscapeToolbox\\DIMAqc\\DIMAqc"
terradat <- "C:\\Users\\jasokarl\\Google Drive\\BLM_AIM\\geodata\\TerrADatExport_19Jan2016.gdb"
plants.file <- "PLANTSlist_Master_with_attribs.20161116.csv"
setwd(work.dir)
plants.master <- read.csv(plants.file,header=T)
arc<-arc.check_product()
# load terrestrial AIM featureclass
# load tables with species info and those that are necessary to track back to the plot and project
#    i.e., species richness detail/header, LPI detail/header, line, plot, sites tables
tblPlots<-paste(terradat,"tblPlots",sep="/") %>% arc.open %>% arc.select()
tblLines <- paste(terradat,"tblLines",sep="/") %>% arc.open %>% arc.select()
tblSites <- paste(terradat,"tblSites",sep="/") %>% arc.open %>% arc.select()
# Deal with these later if we need to.
#tblLPIHeader <- paste(terradat,"tblLPIHeader",sep="/") %>% arc.open %>% arc.select()
#tblLPIDetail <- paste(terradat,"tblLPIDetail",sep="/") %>% arc.open %>% arc.select()
tblSpecRichHeader <- paste(terradat,"tblSpecRichHeader",sep="/") %>% arc.open %>% arc.select()
tblSpecRichDetail <- paste(terradat,"tblSpecRichDetail",sep="/") %>% arc.open %>% arc.select()
tblSites$ProjectBase <- substr(tblSites$SiteName,1,nchar(tblSites$SiteName)-5)
tblSites.sum <- tblSites %>% group_by(SiteKey) %>% summarise(ProjectBase=first(ProjectBase),n=n())
tblPlots.sum <- tblPlots %>% group_by(PlotKey) %>% summarise(SiteKey=first(SiteKey),PlotID=first(PlotID),n=n())
tblLines.sum <- tblLines %>% group_by(LineKey) %>% summarise(PlotKey=first(PlotKey),n=n())
tblPlotLines <- tblPlots.sum %>% inner_join(tblSites.sum,by="SiteKey") %>% inner_join(tblLines.sum,by="PlotKey")
tblSpecRichHeader$year <- year(as.Date(tblSpecRichHeader$FormDate))
pattern = "[AF|AG|PF|PG|SH|TR]\\d{1,3}" # RegExp for legit unknown plant codes
species.nomatch <- data.frame()
species.tally <- data.frame()
for (i in 1:nrow(tblSpecRichDetail)) {
sl <- tblSpecRichDetail[i,"SpeciesList"]
if (!is.na(sl)){
spp.list <- unlist(strsplit(tblSpecRichDetail[i,"SpeciesList"],";"))
spp.total <- length(spp.list)
spp.list <- spp.list[-grep(pattern,spp.list)]  # remove legit unknown plant codes
spp.unkn <- spp.total-length(spp.list)
not.in <- !(spp.list %in% plants.master$Accepted.Symbol)
if (sum(not.in)>0) {
species.nomatch <- rbind(species.nomatch,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"Code"=spp.list[not.in]))
species.tally <- rbind(species.tally,data.frame("RecKey"=tblSpecRichDetail[i,"RecKey"],"TotalSpp"=spp.total,"UnknSpp"=spp.unkn,"NoMatch"=sum(not.in)))
}
}
}
# Add the plot, and Site numbers/names into
species.nomatch.plots <- species.nomatch %>% inner_join(tblSpecRichHeader[,c("RecKey","LineKey","year")],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
num.nomatch.proj <- species.nomatch.plots %>% group_by(Code,ProjectBase) %>% summarise(n=n())
# calc pct species not in plants list
species.tally$PctNoMatch <- species.tally$NoMatch/species.tally$TotalSpp
species.tally$PctUnkn <- species.tally$UnknSpp/species.tally$TotalSpp
avgNoMatch <- mean(species.tally$PctNoMatch)*100
minNoMatch <- min(species.tally$PctNoMatch)*100
maxNoMatch <- max(species.tally$PctNoMatch)*100
avgUnkn <- mean(species.tally$PctUnkn)*100
minUnkn <- min(species.tally$PctUnkn)*100
maxUnkn <-max(species.tally$PctUnkn)*100
plot.data <- species.tally[,c("RecKey","PctUnkn","PctNoMatch")] %>% melt("RecKey")
ggplot(data=plot.data, aes(x=value*100))+geom_histogram() + facet_wrap(facets="variable", labeller=as_labeller(c('PctUnkn'="Approved Unknown Species Code","PctNoMatch"="Codes not in PLANTS"))) +
ylab("Number of plots") + xlab("Percent of species recorded on a plot") + ggtitle("Prevalence of unknown species codes in TerrADat by Plot")
knitr::kable(num.nomatch.proj %>% group_by(ProjectBase)  %>% summarise(n=n()) %>% arrange(desc(n)))
View(num.nomatch.proj)
View(species.nomatch.plots)
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
View(nomatch.bytime)
ggplot(data=nomatch.bytime, aes(x=year,y=n))+geom_bar()+facet_grid(ProjectBase~.)
ggplot(data=nomatch.bytime, aes(x=year,y=n))+geom_bar()+facet_grid(~ProjectBase)
ggplot(data=nomatch.bytime, aes(x=year))+geom_bar()+facet_grid(~ProjectBase)
ggplot(data=nomatch.bytime, aes(x=year))+geom_bar()+facet_grid(ProjectBase~.)
ggplot(data=nomatch.bytime, aes(x=ProjectBase, fill=year()))+geom_bar(position="dodge")
ggplot(data=nomatch.bytime, aes(x=ProjectBase, fill=year)+geom_bar(position="dodge")
ggplot(data=nomatch.bytime, aes(x=ProjectBase, fill=year))+geom_bar(position="dodge")
ggplot(data=nomatch.bytime, aes(x=ProjectBase, fill=year))+geom_bar(position="dodge")+coord_flip()
ggplot(data=nomatch.bytime, aes(x=ProjectBase, fill=year))+geom_bar(position="dodge",stat="identity")+coord_flip()
ggplot(data=nomatch.bytime, aes(x=ProjectBase, y=n, fill=year))+geom_bar(position="dodge",stat="identity")+coord_flip()
ggplot(data=nomatch.bytime, aes(x=ProjectBase, y=n, fill=factor(year))+geom_bar(position="dodge",stat="identity")+coord_flip()
)
ggplot(data=nomatch.bytime, aes(x=ProjectBase, y=n, fill=factor(year))+geom_bar(position="dodge",stat="identity")+coord_flip()
ggplot(data=nomatch.bytime, aes(x=ProjectBase, y=n, fill=factor(year)))+geom_bar(position="dodge",stat="identity")+coord_flip()
ggplot(data=nomatch.bytime, aes(x=ProjectBase, y=n))+geom_bar(position="dodge",stat="identity")+coord_flip()+facet_grid(ProjectBase~.)
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=ProjectBase,y=n))+geom_bar(position="dodge",stat="identity")+coord_flip()+facet_grid(ProjectBase~.)
ggplot(data=nomatch.bytime, aes(x=ProjectBase,y=n,fill=factor(year)))+geom_bar(position="dodge",stat="identity")+coord_flip()
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=ProjectBase,y=n,fill=factor(year)))+geom_bar(position="dodge",stat="identity")+
+xlim=("2011","2012","2013","2014","2015") + coord_flip()
ggplot(data=nomatch.bytime, aes(x=ProjectBase,y=n,fill=factor(year)))+geom_bar(position="dodge",stat="identity")+
xlim=("2011","2012","2013","2014","2015") + coord_flip()
ggplot(data=nomatch.bytime, aes(x=ProjectBase,y=n,fill=factor(year)))+geom_bar(position="dodge",stat="identity")+coord_flip()
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+
facetwrap(ProjectBase)
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+
facet_wrap(ProjectBase)
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+
facet_grid(ProjectBase)
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_grid(ProjectBase)
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_grid(~ProjectBase)
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")
```{r an2, echo=FALSE, out.width='1000px', dpi=150}
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")
opts_chunk$set(dev='pdf')
library(dplyr)
library(ggplot2)
library(arcgisbinding)
library(markdown)
library(knitr)
library(sqldf)
library(lubridate)
work.dir <- "C:\\Users\\jasokarl\\Google Drive\\Landscape Toolbox\\LandscapeToolbox_GitHub\\LandscapeToolbox\\DIMAqc\\DIMAqc"
terradat <- "C:\\Users\\jasokarl\\Google Drive\\BLM_AIM\\geodata\\TerrADatExport_19Jan2016.gdb"
plants.file <- "PLANTSlist_Master_with_attribs.20161116.csv"
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")+xlab("Project Year")+ylab=("Number of plots")
nomatch.bytime <- species.nomatch.plots %>% group_by(ProjectBase,year) %>% summarise(n=n())
ggplot(data=nomatch.bytime, aes(x=factor(year),y=n,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")+xlab("Project Year")+ylab("Number of plots")
plot.data <- species.tally[,c("RecKey","PctUnkn","PctNoMatch")] %>% melt("RecKey")
ggplot(data=plot.data, aes(x=value*100))+geom_histogram() + facet_wrap(facets="variable", labeller=as_labeller(c('PctUnkn'="Approved Unknown Species Code","PctNoMatch"="Codes not in PLANTS"))) +
ylab("Number of plots") + xlab("Percent of species recorded on a plot") + ggtitle("Prevalence of unknown species codes in TerrADat by Plot")
species.tally.plots <- species.tally %>% inner_join(tblSpecRichHeader[,c("RecKey","LineKey","year")],by="RecKey") %>% inner_join(tblPlotLines,by="LineKey")
View(species.tally.plots)
nomatch.bytime <- species.tally.plots %>% group_by(ProjectBase,year) %>% summarise(avgUnkn=mean(pctUnkn),avgNoMatch=mean(NoMatch))
nomatch.bytime <- species.tally.plots %>% group_by(ProjectBase,year) %>% summarise(avgUnkn=mean(PctUnkn),avgNoMatch=mean(PctNoMatch))
ggplot(data=nomatch.bytime, aes(x=factor(year),y=avgNoMatach,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")+xlab("Project Year")+ylab("Number of plots")
View(nomatch.bytime)
ggplot(data=nomatch.bytime, aes(x=factor(year),y=avgNoMatch,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")+xlab("Project Year")+ylab("Number of plots")
nomatch.bytime <- species.tally.plots %>% group_by(ProjectBase,year) %>% summarise(avgUnkn=mean(PctUnkn),avgNoMatch=mean(PctNoMatch))
ggplot(data=nomatch.bytime, aes(x=factor(year),y=avgNoMatch,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")+xlab("Project Year")+ylab("Average percentage of plot species")+ggtitle("Average number of codes not in PLANTS Database per plot by project and year")
ggplot(data=nomatch.bytime, aes(x=factor(year),y=avgUnkn,fill=factor(year)))+geom_bar(stat="identity")+coord_flip()+facet_wrap(~ProjectBase)+theme(legend.position="none")+xlab("Project Year")+ylab("Average percentage of plot species")+ggtitle("Average number of unknown plants per plot by project and year")
names(plants.master)
plants.master[1:20,1:3]
nomatch.list <- unique(species.nomatch$Code)
master.synonyms <- unique(plants.master$Synonym.Symbol)
nomatch.list %in% master.synonyms
sum(nomatch.list %in% master.synonyms)
syn.matches <- nomatch.list %in% master.synonyms
length(syn.matches)
prop.syn <- sum(syn.matches)/length(syn.matches)
tmp<-nomatch.list[syn.matches,]
tmp<-nomatch.list[syn.matches]
tmp
order(nomatch.list[syn.matches])
(nomatch.list[syn.matches])
as.character(nomatch.list[syn.matches])
order(as.character(nomatch.list[syn.matches]))
kable(as.character(nomatch.list[syn.matches]))
tmp <- data.frame("Codes occurring as synonyms"=as.character(nomatch.list[syn.matches]))
kable(tmp)
tmp <- data.frame("Codes occurring as synonyms"=as.character(nomatch.list[syn.matches]))
knitr:kable(order(tmp))
tmp <- data.frame("Codes occurring as synonyms"=as.character(nomatch.list[syn.matches]))
knitr::kable(order(tmp))
tmp <- data.frame("Codes occurring as synonyms"=as.character(nomatch.list[syn.matches]))
knitr::kable(tmp)
tmp <- data.frame("Species.Code"=as.character(nomatch.list[syn.matches]))
knitr::kable(tmp)
most.common <- species.nomatch %>% group_by(Code) %>% summarise(numPlots=n())
kable(most.common[1:50,])
most.common <- species.nomatch %>% group_by(Code) %>% summarise(numPlots=n()) %>% arrange(numPlots)
kable(most.common[1:50,])
most.common <- species.nomatch %>% group_by(Code) %>% summarise(numPlots=n()) %>% arrange(desc(numPlots))
kable(most.common[1:50,])
tmp <- data.frame("Species.Code"=as.character(nomatch.list[syn.matches])) %>% arrange(Species.Code)
knitr::kable(tmp)
View(species.tally.plots)
View(species.tally.plots)
nomatch.bytime <- species.tally.plots %>% group_by(ProjectBase,year) %>% summarise(avgUnkn=mean(PctUnkn),avgNoMatch=mean(PctNoMatch))
